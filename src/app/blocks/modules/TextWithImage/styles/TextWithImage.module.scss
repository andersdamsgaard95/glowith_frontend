@use '../../../../styles/variables' as *;

.container {
    display: flex;
    gap: $gap-large;
    position: relative;
    color: var(--text-color);

    @media screen and (max-width: $media-medium) {
        flex-direction: column;
    } 

    &.imageRight {
        //flex-direction: row-reverse;

        @media screen and (min-width: $media-medium) {
            //flex-direction: column;
            flex-direction: row-reverse;
        }
    }

    &.noGap {
        gap: 0;
    }
}

.imageWrapper {
    flex: 1;
    display: flex;
    align-items: center;

    &.imageToLeft {
        display: flex;
        justify-content: end;  
    }    
}

.imageContainer {
    width: 100%;
    aspect-ratio: 1/1;

    &.imageMarginLeft {
        margin-left: $gap-xlarge;
        margin-right: $gap-large;
        margin-top: $gap-large;
        margin-bottom: $gap-large;

        @media screen and (max-width: $media-large) {
            margin-left: $padding-medium;
        }

        @media screen and (max-width: $media-medium) {
            margin-left: $padding-small;
            margin-right: $padding-small;
            margin-top: $gap-small;
            margin-bottom: $gap-small;
        }
    }

    &.imageMarginRight {
        margin-right: $gap-xlarge;
        margin-left: $gap-large;
        margin-top: $gap-large;
        margin-bottom: $gap-large;

        @media screen and (max-width: $media-large) {
            margin-right: $padding-medium;
        }

        @media screen and (max-width: $media-medium) {
            margin-left: $padding-small;
            margin-right: $padding-small;
            margin-top: $gap-small;
            margin-bottom: $gap-small;
        }
    }

    &.imageMaxWidth {
        @media screen and (min-width: $max-width) {
            max-width: calc($max-width / 2 - $padding-large - $gap-large);
        }
    }
}

.textContainer {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;

    &.textAlignEnd {
        align-items: end;
    }

    .text {
        display: flex;
        flex-direction: column;
        gap: $gap-medium;
        color: var(--text-color);

        &.textMaxWidth {
            @media screen and (min-width: $max-width) {
                max-width: calc($max-width / 2);
            }
        }

        &.textPaddingLeft {
            padding-right: $gap-large;
            padding-left: $gap-xlarge;
            padding-top: $gap-large;
            padding-bottom: $gap-large;
    
            @media screen and (max-width: $media-large) {
                padding-left: $gap-large;
            }
    
            @media screen and (max-width: $media-medium) {
                padding-left: $gap-small;
            }
        }
    
        &.textPaddingRight {
            padding-right: $gap-xlarge;
            padding-left: $gap-large;
            padding-top: $gap-large;
            padding-bottom: $gap-large;
    
            @media screen and (max-width: $media-large) {
                padding-right: $gap-large;
            }
    
            @media screen and (max-width: $media-medium) {
                padding-right: $gap-small;
            }
        }
    }
}

.buttonsContainer {
    display: flex;
    flex-direction: column;
    gap: $gap-medium;
}

.buttonContainer {
    display: flex;
    flex-direction: column;
    gap: $gap-medium;
}