@use '../../../../../styles/variables' as *;

.link {
    text-decoration: none;
}

.container {
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    flex-direction: column;
    gap: $gap-small;
    color: var(--text-color);

    &.boxHover {
        cursor: pointer;
    
        &:hover {
            .box {
                transform: translateY(-0.5rem);
                box-shadow: 0 6px 10px -3px rgba(0, 0, 0, 0.3);
            }
        }
    }

    h2 {
        font-size: 3rem;
    }

    h3 {
        font-size: 2rem;
    }
}

.box {
    width: 100%;
    height: 100%;
    display: flex;
    //justify-content: center;
    //align-items: center;
    position: relative;
    overflow: hidden;
    transition: all 0.3s;
    color: var(--text-color);

    &.hasImage {
        aspect-ratio: 1/1;
    }
}

.textContentInsideBox {
    display: flex;
    flex-direction: column;
    gap: $gap-small;

    &.hasPadding {
        padding: $gap-large;

        @media screen and (max-width: $media-large) {
            padding: $gap-medium;
        }
    
        @media screen and (max-width: $media-medium) {
            padding: $gap-small;
        }
    }
}

.imageContainer {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
}

.textWithImage {
    //opacity: 0;
    display: flex;
    flex-direction: column;
    //gap: $gap-small;
    gap: 0;
    z-index: 10;
    padding: $gap-large;
    align-self: end;
    width: 100%;
    //background: linear-gradient(to top, rgba(255, 255, 255, 1), transparent);
    transform: translateY(0);
    transition: transform 0.3s;
    color: $themeBlack;

    @media screen and (max-width: $media-large) {
        padding: $gap-medium;
    }

    @media screen and (max-width: $media-medium) {
        padding: $gap-small;
    }

    p {
        max-height: 0;
        //transform: scaleY(0);
        //opacity: 0;
        overflow: hidden;
        //transform-origin: bottom;
        //transition: all 0.3s;
    }

    &.textFadeIn {
        transform: translateY(-10px);
        gap: $gap-small;

        p {
            max-height: none;
            //transform: scaleY(1);
            //opacity: 1;
        }
    }
}

.backgroundFade {
    background: linear-gradient(to top, rgba(255, 255, 255, 1), transparent);
    width: 100%;
    align-self: end;
    z-index: 10;
}

.textContentUnderneathBox {
    display: flex;
    flex-direction: column;
    gap: $gap-small;
}